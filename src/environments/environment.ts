// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `angular.json`.

// `.env.ts` is generated by the `npm run env` command
import env from './.env';

// The `window.env` object is loaded in the `index.html` file
const loadedEnv = window.env || {};

export const environment = {
  production: false,
  version: env.mifos_x.version,
  hash: env.mifos_x.hash,

  // Tenant settings
  fineractPlatformTenantId: loadedEnv.fineractPlatformTenantId || 'default',
  fineractPlatformTenantIds: loadedEnv.fineractPlatformTenantIds || 'default',

  // Backend API URLs
  baseApiUrls:
    loadedEnv.fineractApiUrls ||
    'https://192.168.1.3:8443,' + window.location.origin, // ðŸ‘ˆ set localhost backend as primary
  baseApiUrl:
    loadedEnv.fineractApiUrl ||
    (loadedEnv.fineractApiUrls?.length > 0 ? loadedEnv.fineractApiUrls.split(',')[0] : 'https://192.168.1.3:8443'), // ðŸ‘ˆ force localhost

  allowServerSwitch: env.allow_switching_backend_instance,

  // API provider + version
  apiProvider: loadedEnv.apiProvider || '/fineract-provider/api',
  apiVersion: loadedEnv.apiVersion || '/v1',

  serverUrl: '',

  oauth: {
    enabled: loadedEnv.oauthServerEnabled || false,
    serverUrl: loadedEnv.oauthServerUrl || '',
    appId: loadedEnv.oauthAppId || ''
  },

  warningDialog: {
    title: 'Warning',
    content:
      'This system is for authorized use only. Unauthorized access will result in possible legal action. By accessing this system, you acknowledge that you are authorized to do so and that all data stored and processed here is confidential.',
    buttonText: 'Close'
  },

  defaultLanguage: loadedEnv.defaultLanguage || 'en-US',
  supportedLanguages:
    loadedEnv.supportedLanguages || 'cs-CS,de-DE,en-US,es-MX,fr-FR,it-IT,ko-KO,lt-LT,lv-LV,ne-NE,pt-PT,sw-SW',
  preloadClients: loadedEnv['preloadClients'] || true,

  defaultCharDelimiter: loadedEnv.defaultCharDelimiter || ',',

  displayBackEndInfo: loadedEnv.displayBackEndInfo || 'true',
  displayTenantSelector: loadedEnv.displayTenantSelector || 'true',

  // Timeouts
  waitTimeForNotifications: loadedEnv.waitTimeForNotifications || 60,
  waitTimeForCOBCatchUp: loadedEnv.waitTimeForCOBCatchUp || 30,
  session: {
    timeout: {
      idleTimeout: loadedEnv.sessionIdleTimeout || 300000 // 5 minutes
    }
  },

  httpCacheEnabled: loadedEnv.httpCacheEnabled || false,

  // Extra API configs
  vNextApiUrl: window.env?.vNextApiUrl || 'https://apis.flexcore.mx',
  vNextApiProvider: window.env?.vNextApiProvider || '/vnext1',
  vNextApiVersion: window.env?.vNextApiVersion || '/v1.0',
  interbankTransfers: window.env?.interbankTransfers || false,

  minPasswordLength: loadedEnv.minPasswordLength || 12
};

// Final Server URL (example: http://192.168.1.3/fineract-provider/api/v1)
environment.serverUrl = `${environment.baseApiUrl}${environment.apiProvider}${environment.apiVersion}`;
